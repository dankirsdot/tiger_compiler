1 shift/reduce conflict

error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 17)

state 0:

	program : . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 2
	program	goto 126
	lvalue	goto 1

	.	error


state 1:

	exp : lvalue .  (reduce by rule 21)
	exp : lvalue . ASSIGN exp 
	lvalue : lvalue . LBRACK exp RBRACK 
	lvalue : lvalue . DOT ID 

	LBRACK	shift 16
	DOT	shift 15
	ASSIGN	shift 14


	.	reduce by rule 21


state 2:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	program : exp .  (reduce by rule 0)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 0


state 3:

	exp : NIL .  (reduce by rule 23)



	.	reduce by rule 23


state 4:

	exp : BREAK .  (reduce by rule 47)



	.	reduce by rule 47


state 5:

	exp : LET . decs IN expseq END 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 33
	dec	goto 32
	tydec	goto 31
	vardec	goto 30
	fundec	goto 29

	.	reduce by rule 1


state 6:

	exp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 37


	.	error


state 7:

	exp : WHILE . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 38
	lvalue	goto 1

	.	error


state 8:

	exp : IF . exp THEN exp ELSE exp 
	exp : IF . exp THEN exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 39
	lvalue	goto 1

	.	error


state 9:

	exp : MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 40
	lvalue	goto 1

	.	error


state 10:

	exp : LPAREN . expseq RPAREN 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	lvalue	goto 1
	expseq	goto 41

	.	reduce by rule 49


state 11:

	exp : STRING .  (reduce by rule 25)



	.	reduce by rule 25


state 12:

	exp : INT .  (reduce by rule 24)



	.	reduce by rule 24

error:  state 13: shift/reduce conflict (shift LBRACK, reduce by rule 17)

state 13:

	exp : ID . LPAREN args RPAREN 
	exp : ID . LBRACE recfields RBRACE 
	exp : ID . LBRACK exp RBRACK OF exp 
	lvalue : ID .  (reduce by rule 17)
	lvalue : ID . LBRACK exp RBRACK 

	LPAREN	shift 45
	LBRACK	shift 44
	LBRACE	shift 43


	.	reduce by rule 17


state 14:

	exp : lvalue ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 46
	lvalue	goto 1

	.	error


state 15:

	lvalue : lvalue DOT . ID 

	ID	shift 47


	.	error


state 16:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 48
	lvalue	goto 1

	.	error


state 17:

	exp : exp OR . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 49
	lvalue	goto 1

	.	error


state 18:

	exp : exp AND . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 50
	lvalue	goto 1

	.	error


state 19:

	exp : exp GE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 51
	lvalue	goto 1

	.	error


state 20:

	exp : exp GT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 52
	lvalue	goto 1

	.	error


state 21:

	exp : exp LE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 53
	lvalue	goto 1

	.	error


state 22:

	exp : exp LT . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 54
	lvalue	goto 1

	.	error


state 23:

	exp : exp NEQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 55
	lvalue	goto 1

	.	error


state 24:

	exp : exp EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 56
	lvalue	goto 1

	.	error


state 25:

	exp : exp DIVIDE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 57
	lvalue	goto 1

	.	error


state 26:

	exp : exp TIMES . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 58
	lvalue	goto 1

	.	error


state 27:

	exp : exp MINUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 59
	lvalue	goto 1

	.	error


state 28:

	exp : exp PLUS . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 60
	lvalue	goto 1

	.	error


state 29:

	dec : fundec .  (reduce by rule 5)



	.	reduce by rule 5


state 30:

	dec : vardec .  (reduce by rule 4)



	.	reduce by rule 4


state 31:

	dec : tydec .  (reduce by rule 3)



	.	reduce by rule 3


state 32:

	decs : dec . decs 

	FUNCTION	shift 36
	VAR	shift 35
	TYPE	shift 34

	decs	goto 61
	dec	goto 32
	tydec	goto 31
	vardec	goto 30
	fundec	goto 29

	.	reduce by rule 1


state 33:

	exp : LET decs . IN expseq END 

	IN	shift 62


	.	error


state 34:

	tydec : TYPE . ID EQ ty 

	ID	shift 63


	.	error


state 35:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 64


	.	error


state 36:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 65


	.	error


state 37:

	exp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 66


	.	error


state 38:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp . DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 67


	.	error


state 39:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp . THEN exp ELSE exp 
	exp : IF exp . THEN exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	THEN	shift 68


	.	error


state 40:

	exp : MINUS exp .  (reduce by rule 27)
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 27


state 41:

	exp : LPAREN expseq . RPAREN 

	RPAREN	shift 69


	.	error


state 42:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	expseq : exp .  (reduce by rule 50)
	expseq : exp . SEMICOLON expseq 

	SEMICOLON	shift 70
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 50


state 43:

	exp : ID LBRACE . recfields RBRACE 

	ID	shift 72

	recfields	goto 71

	.	reduce by rule 52


state 44:

	exp : ID LBRACK . exp RBRACK OF exp 
	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 73
	lvalue	goto 1

	.	error


state 45:

	exp : ID LPAREN . args RPAREN 


	args	goto 74

	.	error


state 46:

	exp : lvalue ASSIGN exp .  (reduce by rule 22)
	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 22


state 47:

	lvalue : lvalue DOT ID .  (reduce by rule 20)



	.	reduce by rule 20


state 48:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 75
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 49:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : exp OR exp .  (reduce by rule 40)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 40


state 50:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp AND exp .  (reduce by rule 39)
	exp : exp . OR exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19


	.	reduce by rule 39


state 51:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp GE exp .  (reduce by rule 38)
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 38
	COMMA	reduce by rule 38
	SEMICOLON	reduce by rule 38
	RPAREN	reduce by rule 38
	RBRACK	reduce by rule 38
	RBRACE	reduce by rule 38
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 38
	OR	reduce by rule 38
	THEN	reduce by rule 38
	ELSE	reduce by rule 38
	TO	reduce by rule 38
	DO	reduce by rule 38
	IN	reduce by rule 38
	END	reduce by rule 38
	FUNCTION	reduce by rule 38
	VAR	reduce by rule 38
	TYPE	reduce by rule 38


	.	error


state 52:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp GT exp .  (reduce by rule 37)
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 37
	COMMA	reduce by rule 37
	SEMICOLON	reduce by rule 37
	RPAREN	reduce by rule 37
	RBRACK	reduce by rule 37
	RBRACE	reduce by rule 37
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 37
	OR	reduce by rule 37
	THEN	reduce by rule 37
	ELSE	reduce by rule 37
	TO	reduce by rule 37
	DO	reduce by rule 37
	IN	reduce by rule 37
	END	reduce by rule 37
	FUNCTION	reduce by rule 37
	VAR	reduce by rule 37
	TYPE	reduce by rule 37


	.	error


state 53:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp LE exp .  (reduce by rule 36)
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 36
	COMMA	reduce by rule 36
	SEMICOLON	reduce by rule 36
	RPAREN	reduce by rule 36
	RBRACK	reduce by rule 36
	RBRACE	reduce by rule 36
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 36
	OR	reduce by rule 36
	THEN	reduce by rule 36
	ELSE	reduce by rule 36
	TO	reduce by rule 36
	DO	reduce by rule 36
	IN	reduce by rule 36
	END	reduce by rule 36
	FUNCTION	reduce by rule 36
	VAR	reduce by rule 36
	TYPE	reduce by rule 36


	.	error


state 54:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp LT exp .  (reduce by rule 35)
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 35
	COMMA	reduce by rule 35
	SEMICOLON	reduce by rule 35
	RPAREN	reduce by rule 35
	RBRACK	reduce by rule 35
	RBRACE	reduce by rule 35
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 35
	OR	reduce by rule 35
	THEN	reduce by rule 35
	ELSE	reduce by rule 35
	TO	reduce by rule 35
	DO	reduce by rule 35
	IN	reduce by rule 35
	END	reduce by rule 35
	FUNCTION	reduce by rule 35
	VAR	reduce by rule 35
	TYPE	reduce by rule 35


	.	error


state 55:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp NEQ exp .  (reduce by rule 34)
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 34
	COMMA	reduce by rule 34
	SEMICOLON	reduce by rule 34
	RPAREN	reduce by rule 34
	RBRACK	reduce by rule 34
	RBRACE	reduce by rule 34
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 34
	OR	reduce by rule 34
	THEN	reduce by rule 34
	ELSE	reduce by rule 34
	TO	reduce by rule 34
	DO	reduce by rule 34
	IN	reduce by rule 34
	END	reduce by rule 34
	FUNCTION	reduce by rule 34
	VAR	reduce by rule 34
	TYPE	reduce by rule 34


	.	error


state 56:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp EQ exp .  (reduce by rule 33)
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	EOF	reduce by rule 33
	COMMA	reduce by rule 33
	SEMICOLON	reduce by rule 33
	RPAREN	reduce by rule 33
	RBRACK	reduce by rule 33
	RBRACE	reduce by rule 33
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	AND	reduce by rule 33
	OR	reduce by rule 33
	THEN	reduce by rule 33
	ELSE	reduce by rule 33
	TO	reduce by rule 33
	DO	reduce by rule 33
	IN	reduce by rule 33
	END	reduce by rule 33
	FUNCTION	reduce by rule 33
	VAR	reduce by rule 33
	TYPE	reduce by rule 33


	.	error


state 57:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp DIVIDE exp .  (reduce by rule 32)
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 32


state 58:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp TIMES exp .  (reduce by rule 30)
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 



	.	reduce by rule 30


state 59:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp MINUS exp .  (reduce by rule 31)
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 31


state 60:

	exp : exp . PLUS exp 
	exp : exp PLUS exp .  (reduce by rule 29)
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 

	TIMES	shift 26
	DIVIDE	shift 25


	.	reduce by rule 29


state 61:

	decs : dec decs .  (reduce by rule 2)



	.	reduce by rule 2


state 62:

	exp : LET decs IN . expseq END 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	lvalue	goto 1
	expseq	goto 76

	.	reduce by rule 49


state 63:

	tydec : TYPE ID . EQ ty 

	EQ	shift 77


	.	error


state 64:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 79
	ASSIGN	shift 78


	.	error


state 65:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 80


	.	error


state 66:

	exp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 81
	lvalue	goto 1

	.	error


state 67:

	exp : WHILE exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 82
	lvalue	goto 1

	.	error


state 68:

	exp : IF exp THEN . exp ELSE exp 
	exp : IF exp THEN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 83
	lvalue	goto 1

	.	error


state 69:

	exp : LPAREN expseq RPAREN .  (reduce by rule 26)



	.	reduce by rule 26


state 70:

	expseq : exp SEMICOLON . expseq 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 42
	lvalue	goto 1
	expseq	goto 84

	.	reduce by rule 49


state 71:

	exp : ID LBRACE recfields . RBRACE 

	RBRACE	shift 85


	.	error


state 72:

	recfields : ID . EQ exp 
	recfields : ID . EQ exp COMMA recfields 

	EQ	shift 86


	.	error


state 73:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp . RBRACK OF exp 
	lvalue : ID LBRACK exp . RBRACK 

	RBRACK	shift 87
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	error


state 74:

	exp : ID LPAREN args . RPAREN 

	RPAREN	shift 88


	.	error


state 75:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 19)



	.	reduce by rule 19


state 76:

	exp : LET decs IN expseq . END 

	END	shift 89


	.	error


state 77:

	tydec : TYPE ID EQ . ty 

	ID	shift 93
	LBRACE	shift 92
	ARRAY	shift 91

	ty	goto 90

	.	error


state 78:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 94
	lvalue	goto 1

	.	error


state 79:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 95


	.	error


state 80:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 97

	tyfields	goto 96

	.	reduce by rule 10


state 81:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	TO	shift 98


	.	error


state 82:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : WHILE exp DO exp .  (reduce by rule 45)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 45


state 83:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp . ELSE exp 
	exp : IF exp THEN exp .  (reduce by rule 44)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	ELSE	shift 99


	.	reduce by rule 44


state 84:

	expseq : exp SEMICOLON expseq .  (reduce by rule 51)



	.	reduce by rule 51


state 85:

	exp : ID LBRACE recfields RBRACE .  (reduce by rule 41)



	.	reduce by rule 41


state 86:

	recfields : ID EQ . exp 
	recfields : ID EQ . exp COMMA recfields 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 100
	lvalue	goto 1

	.	error


state 87:

	exp : ID LBRACK exp RBRACK . OF exp 
	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 18)

	OF	shift 101


	.	reduce by rule 18


state 88:

	exp : ID LPAREN args RPAREN .  (reduce by rule 28)



	.	reduce by rule 28


state 89:

	exp : LET decs IN expseq END .  (reduce by rule 48)



	.	reduce by rule 48


state 90:

	tydec : TYPE ID EQ ty .  (reduce by rule 6)



	.	reduce by rule 6


state 91:

	ty : ARRAY . OF ID 

	OF	shift 102


	.	error


state 92:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 97

	tyfields	goto 103

	.	reduce by rule 10


state 93:

	ty : ID .  (reduce by rule 7)



	.	reduce by rule 7


state 94:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 13)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 13


state 95:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 104


	.	error


state 96:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 105


	.	error


state 97:

	tyfields : ID . COLON ID 
	tyfields : ID . COLON ID COMMA tyfields 

	COLON	shift 106


	.	error


state 98:

	exp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 107
	lvalue	goto 1

	.	error


state 99:

	exp : IF exp THEN exp ELSE . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 108
	lvalue	goto 1

	.	error


state 100:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	recfields : ID EQ exp .  (reduce by rule 53)
	recfields : ID EQ exp . COMMA recfields 

	COMMA	shift 109
	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 53


state 101:

	exp : ID LBRACK exp RBRACK OF . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 110
	lvalue	goto 1

	.	error


state 102:

	ty : ARRAY OF . ID 

	ID	shift 111


	.	error


state 103:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 112


	.	error


state 104:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 113
	lvalue	goto 1

	.	error


state 105:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 115
	EQ	shift 114


	.	error


state 106:

	tyfields : ID COLON . ID 
	tyfields : ID COLON . ID COMMA tyfields 

	ID	shift 116


	.	error


state 107:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17
	DO	shift 117


	.	error


state 108:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : IF exp THEN exp ELSE exp .  (reduce by rule 43)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 43


state 109:

	recfields : ID EQ exp COMMA . recfields 

	ID	shift 72

	recfields	goto 118

	.	reduce by rule 52


state 110:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : ID LBRACK exp RBRACK OF exp .  (reduce by rule 42)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 42


state 111:

	ty : ARRAY OF ID .  (reduce by rule 9)



	.	reduce by rule 9


state 112:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 8)



	.	reduce by rule 8


state 113:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 14)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 14


state 114:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 119
	lvalue	goto 1

	.	error


state 115:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 120


	.	error


state 116:

	tyfields : ID COLON ID .  (reduce by rule 11)
	tyfields : ID COLON ID . COMMA tyfields 

	COMMA	shift 121


	.	reduce by rule 11


state 117:

	exp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 122
	lvalue	goto 1

	.	error


state 118:

	recfields : ID EQ exp COMMA recfields .  (reduce by rule 54)



	.	reduce by rule 54


state 119:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 15)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 15


state 120:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 123


	.	error


state 121:

	tyfields : ID COLON ID COMMA . tyfields 

	ID	shift 97

	tyfields	goto 124

	.	reduce by rule 10


state 122:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	exp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 46)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 46


state 123:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 13
	INT	shift 12
	STRING	shift 11
	LPAREN	shift 10
	MINUS	shift 9
	IF	shift 8
	WHILE	shift 7
	FOR	shift 6
	LET	shift 5
	BREAK	shift 4
	NIL	shift 3

	exp	goto 125
	lvalue	goto 1

	.	error


state 124:

	tyfields : ID COLON ID COMMA tyfields .  (reduce by rule 12)



	.	reduce by rule 12


state 125:

	exp : exp . PLUS exp 
	exp : exp . TIMES exp 
	exp : exp . MINUS exp 
	exp : exp . DIVIDE exp 
	exp : exp . EQ exp 
	exp : exp . NEQ exp 
	exp : exp . LT exp 
	exp : exp . LE exp 
	exp : exp . GT exp 
	exp : exp . GE exp 
	exp : exp . AND exp 
	exp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 16)

	PLUS	shift 28
	MINUS	shift 27
	TIMES	shift 26
	DIVIDE	shift 25
	EQ	shift 24
	NEQ	shift 23
	LT	shift 22
	LE	shift 21
	GT	shift 20
	GE	shift 19
	AND	shift 18
	OR	shift 17


	.	reduce by rule 16


state 126:


	EOF	accept


	.	error

454 of 939 action table entries left after compaction
89 goto table entries
